{
  "node_id": 5,
  "name": "Decision Tree Classifier",
  "category": 11,
  "node_type": 0,
  "family": 6,
  "compatible_with_stream": false,
  "compatible_stream_output_modes": [],
  "compatible_with_spark_pipeline": true,
  "is_splitter": false,
  "produces_model": true,
  "estimator_name": "DecisionTreeClassifier",
  "parameter_props": {"featuresCol": {"type": ["string"], "constraints":[], "default":"features"}, "labelCol": {"type": ["string"], "constraints":[], "default":"label"}, "predictionCol": {"type": ["string"], "constraints":[], "default":"prediction"},"probabilityCol": {"type": ["string"], "constraints":[], "default":"probability"},"rawPredictionCol": {"type": ["string"], "constraints":[], "default":"rawPrediction"},
    "maxDepth": {"type": ["int"], "constraints":[22], "default": "5"},
    "maxBins": {"type": ["int"], "constraints":[25], "default": "32"},
    "minInstancesPerNode": {"type": ["int"], "constraints":[28], "default": "1"},
    "impurity": {"type": ["string"], "constraints":[31], "default": "gini"},
    "checkpointInterval": {"type": ["int"], "constraints":[34], "default": "10"},
    "cacheNodeIds": {"type": ["bool"], "constraints":[], "default": "False"},
    "seed": {"type": ["int"], "constraints":[], "default": "None"}},
  "df_constraints": [0,1,4,5,10,11,13],
  "explanation": "CacheNodeIds: If false, the algorithm will pass trees to executors to match instances with nodes. If true, the algorithm will cache node IDs for each instance. Caching can speed up training of deeper trees. Users can set how often should the cache be checkpointed or disable it by setting checkpointInterval. checkpointInterval set -1 to disable. MaxDepth: Maximum depth of the tree. MinInstancesPerNode: Minimum number of instances each child must have after split. If a split causes the left or right child to have fewer than minInstancesPerNode, the split will be discarded as invalid. Should be >= 1. Added  rawPrediction, probability, and prediction columns to schema."
}